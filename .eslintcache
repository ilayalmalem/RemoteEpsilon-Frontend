[{"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/index.js":"1","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/App.js":"2","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/RegisterPage.js":"3","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/LoginPage.js":"4","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/components/Navbar.js":"5","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/HomePage.js":"6","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/GetStartedPage.js":"7","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/Dashboard.js":"8","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/AuthService.js":"9","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/DateService.js":"10","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/GlobalsService.js":"11","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/components/Form.js":"12","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/AssignmentsOverdue.js":"13","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/TranslationService.js":"14","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/AssignmentPage.js":"15"},{"size":511,"mtime":1611054978962,"results":"16","hashOfConfig":"17"},{"size":3079,"mtime":1611479663323,"results":"18","hashOfConfig":"17"},{"size":1810,"mtime":1610360700949,"results":"19","hashOfConfig":"17"},{"size":1179,"mtime":1611056562349,"results":"20","hashOfConfig":"17"},{"size":4291,"mtime":1611308658759,"results":"21","hashOfConfig":"17"},{"size":1388,"mtime":1611478977831,"results":"22","hashOfConfig":"17"},{"size":3064,"mtime":1610356143386,"results":"23","hashOfConfig":"17"},{"size":4800,"mtime":1611646240873,"results":"24","hashOfConfig":"17"},{"size":1281,"mtime":1611213350908,"results":"25","hashOfConfig":"17"},{"size":824,"mtime":1611058646751,"results":"26","hashOfConfig":"17"},{"size":318,"mtime":1611213807366,"results":"27","hashOfConfig":"17"},{"size":6470,"mtime":1611088641963,"results":"28","hashOfConfig":"17"},{"size":2524,"mtime":1611557183031,"results":"29","hashOfConfig":"17"},{"size":674,"mtime":1611482742857,"results":"30","hashOfConfig":"17"},{"size":1341,"mtime":1611482871314,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1d51z8i",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/index.js",[],["69","70"],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/App.js",["71"],"import './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport './Styles/main.scss';\nimport Navbar from \"./components/Navbar\";\nimport HomePage from \"./Pages/HomePage\";\nimport {useRef, useState} from \"react\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport Dashboard from \"./Pages/Dashboard\";\nimport AuthService from \"./services/AuthService\";\nimport AssignmentsOverdue from \"./Pages/AssignmentsOverdue\";\nimport AssignmentPage from \"./Pages/AssignmentPage\";\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(AuthService.isAuthenticated());\n    return (\n        <Router>\n            <div id=\"main\"  className={\"w-full h-screen\"} style={{background: (loggedIn ? ' white' :  'linear-gradient(to bottom right, #B9FCFF, #fff)')}} dir=\"rtl\">\n                <div className={\"navbar-wrapper flex items-center sticky top-0\" + (loggedIn ? ' shadow-none' : '')} style={{'backgroundColor': (loggedIn ? ' white' :  '#D1FDFE')}}>\n                    <Navbar setLoggedIn={setLoggedIn} loggedIn={loggedIn} />\n                </div>\n\n                <div className=\"app\">\n                    <div className=\"content px-10 md:px-20\">\n                        <Switch>\n                            <PrivateRoute path=\"/dashboard/\" component={Dashboard} />\n                            <PrivateRoute path=\"/assignments/overdue\" component={AssignmentsOverdue} />\n                            <PrivateRoute path=\"/assignment/:id\" component={AssignmentPage} />\n                            <Route path=\"/teachers\" exact>\n                                <div className=\"text-white\">Teachers</div>\n                            </Route>\n\n                            <Route path=\"/students\" exact>\n                                <div className=\"text-white\">Students</div>\n                            </Route>\n\n                            <Route path=\"/about\" exact>\n                                <div className=\"text-white\">About</div>\n                            </Route>\n\n                            <Route path=\"/login\">\n                                <LoginPage setLoggedIn={setLoggedIn} />\n                            </Route>\n\n                            <Route path=\"/\" exact>\n                                {loggedIn ?\n                                    <Dashboard />\n                                    :\n                                    <HomePage />\n                                }\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const isLoggedIn = AuthService.isAuthenticated();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                )\n            }\n        />\n    )\n}\n","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/RegisterPage.js",[],["72","73"],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/LoginPage.js",["74","75"],"import {\n    createMuiTheme,\n    ThemeProvider,\n} from '@material-ui/core';\nimport '../Styles/authentication.scss';\nimport logo from '../assets/logo.svg';\nimport Globals from \"../services/GlobalsService\";\nimport Form from \"../components/Form\";\n\nconst ltrTheme = createMuiTheme({ direction: \"ltr\" });\nconst rtlTheme = createMuiTheme({ direction: \"rtl\" });\nconst isRtl = Globals.settings.isRtl;\n\nfunction LoginPage(props) {\n    return (\n        <ThemeProvider theme={isRtl ? rtlTheme : ltrTheme}>\n            <div dir={isRtl ? 'rtl' : 'ltr'} className=\"wrapper flex justify-center w-full\" dir=\"ltr\">\n                <div\n                    className=\"flex bg-white shadow-xl flex-col justify-start border-2 w-full md:w-8/12 lg:w-6/12 xl:w-3/12 p-6\">\n                    <div className=\"logo flex lg:mb-auto justify-center\">\n                        <img src={logo} className=\"w-2/12\"/>\n                    </div>\n                    <div className=\"w-full lg:mb-auto mt-8\">\n                        <Form isRtl={isRtl} setLoggedIn={props.setLoggedIn} />\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default LoginPage;","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/components/Navbar.js",["76"],"import {Link, useHistory} from \"react-router-dom\";\nimport AuthService from \"../services/AuthService\";\nimport {Button, Menu, MenuItem} from \"@material-ui/core\";\nimport {useState} from \"react\";\n\nexport default function Navbar(props) {\n\n    return (\n        <nav className=\"navbar w-full\">\n            <div className=\"navbar-content px-10 md:px-20 flex justify-between items-center text-black\">\n                <Link className=\"no-underline\" to=\"/\">\n                    <div className=\"logo text-lg md:text-xl font-semibold\">RemoteEpsilon</div>\n                </Link>\n                <div className=\"flex justify-center sm:justify-start md:hidden\">\n                    <Link className=\"link text-sm md:text-base text-red-400 rounded-full text-white\"\n                          to=\"/login\">התחברות</Link>\n                </div>\n                {props.loggedIn ?\n                    <ul className=\"hidden md:flex link-list flex items-center\">\n                        <Link className=\"link\" to=\"/storage\">אחסון</Link>\n                        <Link className=\"link\" to=\"/assignments\">מטלות</Link>\n                        <Link className=\"link\" to=\"/myclass\">הכיתה שלי</Link>\n                        <LongMenu className=\"link\" setLogged={props.setLoggedIn} />\n                    </ul>\n                    :\n                    <ul className=\"hidden md:flex link-list flex items-center\">\n                        <Link className=\"link\" to=\"/teachers\">למורים</Link>\n                        <Link className=\"link\" to=\"/students\">לתלמידים</Link>\n                        <Link className=\"link\" to=\"/about\">אודות</Link>\n                        <Link className=\"link link-main rounded-full text-white\" to=\"/login\">התחברות</Link>\n                    </ul>\n\n                }\n            </div>\n        </nav>\n    )\n}\n\nfunction LongMenu(props) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const history= useHistory();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    return (\n        <div>\n            <button className=\"link w-12 outline-none z-0 cursor-pointer h-12 bg-black rounded-full\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}></button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <Link to=\"/profile\">\n                    <MenuItem onClick={handleClose}>החשבון שלי</MenuItem>\n                </Link>\n                <div onClick={() => {\n                     AuthService.logout();\n                     props.setLogged(false);\n                     history.push('/')\n                 }}>\n                    <MenuItem onClick={handleClose}>התנתק</MenuItem>\n                </div>\n            </Menu>\n        </div>\n    );\n}\n\n// function LongMenu(props) {\n//     const [menuOpen, setMenuOpen] = useState(false);\n//     const [anchorEl, setAnchorEl] = useState()\n//     const history= useHistory();\n//     const recordButtonPosition = (event) => {\n//         setAnchorEl(event.currentTarget);\n//         setMenuOpen(true);\n//     }\n//\n//     let closeMenu = () => {\n//         setMenuOpen(false);\n//     }\n//\n//     return (\n//         <>\n//             <div onClick={recordButtonPosition} className=\"w-12 z-0 cursor-pointer h-12 bg-black rounded-full\"></div>\n//             <Menu\n//                 getContentAnchorEl={null}\n//                 anchorOrigin={{vertical: 'center', horizontal: 'center'}}\n//                 anchorEl={anchorEl}\n//                 open={menuOpen}\n//                 onClose={closeMenu}>\n//                 <Link to=\"/settings\">\n//                     <MenuItem onClick={closeMenu}> Settings </MenuItem>\n//                 </Link>\n//                 <div onClick={() => {\n//                     AuthService.logout();\n//                     props.setLogged(false);\n//                     history.push('/')\n//                 }}>\n//                     <MenuItem onClick={closeMenu}> Logout </MenuItem>\n//                 </div>\n//             </Menu>\n//         </>\n//     );\n// }","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/HomePage.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/GetStartedPage.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/Dashboard.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/AuthService.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/DateService.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/GlobalsService.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/components/Form.js",["77","78","79","80","81","82"],"import AuthService from \"../services/AuthService\";\nimport {IconButton, InputAdornment, TextField, Tooltip, withStyles} from \"@material-ui/core\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nconst styles = theme => ({\n    notchedOutline: {\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: 'rgba(0, 0, 0, 0.87)',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#3f51b5',\n            },\n        },\n        borderWidth: \"1px\",\n        borderColor: \"rgba(0, 0, 0, 0.23)\"\n    },\n    errorOutline: {\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: 'rgba(0, 0, 0, 0.87)',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#3f51b5',\n            },\n        },\n        borderWidth: \"2px\",\n        borderColor: \"red\"\n    }\n})\n\n\nfunction Form(props) {\n    const [id, setId] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\n    const history = useHistory();\n    const [idErrors, setIdErrors] = useState('');\n    const [passwordErrors, setPasswordErrors] = useState('');\n    const [allErrors, setAllErrors] = useState('');\n\n    const handleSubmit = async (e, id, password) => {\n        e.preventDefault();\n\n        // This in production will be replaced to an api call to fetch user data to be stored\n        const user = {\n            // name: 'עילאי דוד אלמלם',\n            id: id,\n            password: password,\n            // email: 'ilayalmalem@gmail.com',\n            // phone: '0504841222',\n            // role: 'student'\n        };\n\n        const authorized = await AuthService.authenticate(user)\n                console.log(authorized)\n                if(authorized.state == true) {\n                    props.setLoggedIn(true);\n                    history.push({\n                        pathname: '/dashboard',\n                        state: {\n                            user: user\n                        }\n                    });\n                    setIdErrors('');\n                    setPasswordErrors('');\n                    setAllErrors('');\n                }\n                else {\n                    setIdErrors(authorized.errors.id);\n                    setPasswordErrors(authorized.errors.password);\n                    setAllErrors(authorized.errors.all);\n                }\n            }\n    const appDir = props.isRtl ? 'rtl' : 'ltr';\n    const {classes} = props;\n    return (\n        <form className={classes.root}>\n            <Tooltip title=\"מספרים בלבד , 9 ספרות.\" placement=\"right\" aria-label=\"add\">\n                <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                        dir: appDir,\n                        classes: {\n                            notchedOutline: idErrors == '' ? classes.notchedOutline : classes.errorOutline\n                        }\n                    }}\n                    className={classes.textField}\n                    onChange={e => setId(e.target.value)}\n                    value={id}\n                    label=\"תעודת זהות\"\n                    InputLabelProps={{\n                        style: {\n                            color: '#000',\n                        },\n                        dir: appDir,\n                    }}\n\n                    id=\"custom-css-outlined-input\"\n                    type=\"number\"\n                />\n            </Tooltip>\n            <div dir={appDir} className=\"text-red-400 text-sm \">\n                {idErrors}\n            </div>\n            <div className=\"h-7\"></div>\n\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                className={classes.textField}\n                label=\"סיסמה\"\n                InputLabelProps={{\n                    style: {color: '#000'},\n                }}\n                onChange={e => setPassword(e.target.value)}\n                value={password}\n                InputProps={{\n                    dir: appDir,\n                    classes: {\n                        notchedOutline: passwordErrors == '' ? classes.notchedOutline : classes.errorOutline\n                    },\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                            >\n                                {showPassword ? <VisibilityOff className=\"text-blue-400\"/> :\n                                    <Visibility style={{color: 'gray'}}/>}\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n                id=\"custom-css-outlined-input\"\n                type={showPassword ? \"text\" : \"password\"}\n            />\n            <div dir={appDir} className=\"text-red-400 text-sm\">\n                {passwordErrors}\n            </div>\n            <div dir={appDir} className=\"text-red-400 text-sm \">\n                {allErrors}\n            </div>\n            <label dir={appDir} className=\"inline-flex items-center mt-5 w-full\">\n                <input type=\"checkbox\" className=\"form-checkbox h-5 w-5\"\n                       onChange={() => setRememberMe(!rememberMe)} checked={rememberMe}/><span\n                className={(appDir == 'rtl' ? 'mr-2' : 'ml-2 ') + \" text-black text-sm\"}>זכור אותי</span>\n            </label>\n            {/*</div>*/}\n\n            <button disabled={(id.length != 9 || password.length <= 4) ? true : false}\n                    onClick={e => handleSubmit(e, id, password)}\n                    className={\"w-full outline-none bg-red-400 mt-4 h-10 text-white\" +\n                    \"\" + ((id.length != 9 || password.length <= 4) ? ' opacity-50' : ' opacity-100')}>התחבר\n            </button>\n\n        </form>\n    )\n}\n\nexport default withStyles(styles)(Form);","/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/AssignmentsOverdue.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/services/TranslationService.js",[],"/Users/ilayalmalem/code/RemoteEpsilon/RemoteEpsilon-Frontend/src/Pages/AssignmentPage.js",["83"],"import {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport GlobalsService from \"../services/GlobalsService\";\nimport TranslationService from \"../services/TranslationService\";\n\nexport default function AssignmentPage() {\n    const {id} = useParams();\n    const [assignment, setAssignment] = useState();\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        axios.get(`${GlobalsService.baseAPIURL}/assignment/${id}`)\n            .then(res => {\n                setAssignment(res.data)\n            })\n            .catch(err => {\n                setError('Not authorized')\n                return null;\n            })\n\n    }, [])\n\n    return (\n        <>\n            {error ? (\n                <div>{TranslationService.get('You are not authorized to access this assignment.')}</div>\n            ) : assignment && (\n                <div className=\"top-bar flex items-center justify-between w-full\">\n                    <div className=\"title font-bold text-xl\">\n                        {assignment.title}\n                    </div>\n                    <div>\n                        <span className=\"font-semibold\">{TranslationService.get('assignment')}</span> מ{assignment.user.email}\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":11,"column":9,"nodeType":"90","messageId":"91","endLine":11,"endColumn":15},{"ruleId":"84","replacedBy":"92"},{"ruleId":"86","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":17,"column":93,"nodeType":"96","endLine":17,"endColumn":102},{"ruleId":"97","severity":1,"message":"98","line":21,"column":25,"nodeType":"99","endLine":21,"endColumn":61},{"ruleId":"88","severity":1,"message":"100","line":3,"column":9,"nodeType":"90","messageId":"91","endLine":3,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":62,"column":37,"nodeType":"103","messageId":"104","endLine":62,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":91,"column":54,"nodeType":"103","messageId":"104","endLine":91,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":127,"column":56,"nodeType":"103","messageId":"104","endLine":127,"endColumn":58},{"ruleId":"101","severity":1,"message":"102","line":154,"column":36,"nodeType":"103","messageId":"104","endLine":154,"endColumn":38},{"ruleId":"101","severity":1,"message":"105","line":158,"column":42,"nodeType":"103","messageId":"104","endLine":158,"endColumn":44},{"ruleId":"101","severity":1,"message":"105","line":161,"column":38,"nodeType":"103","messageId":"104","endLine":161,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":22,"column":8,"nodeType":"108","endLine":22,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["110"],["111"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [id]",{"range":"115","text":"116"},[699,701],"[id]"]